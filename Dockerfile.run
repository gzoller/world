FROM aibano/ubuntu-java-8

# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added
RUN groupadd -r redis && useradd -r -g redis redis

# Add files.
ADD bin/start /usr/local/bin/
ADD bin/start-kafka.sh /usr/bin/
ADD bin/check.sh /usr/local/bin/
ADD bin/harness.json /var/www/html/
ADD bin/mongodb /etc/init.d/
ADD portster /usr/local/bin/
ADD containerId.sh /usr/local/bin/

#--------------------------- Prologue

RUN apt-get update && apt-get install -y --no-install-recommends ca-certificates wget numactl \
  libc6-i386 gcc gcc-multilib libc6-dev-i386 make \
  jq nginx zookeeper supervisor dnsutils ruby s3cmd \
  && rm -rf /var/lib/apt/lists/*

#--------------------------- MongoDB

# Import MongoDB public GPG key AND create a MongoDB list file

RUN mkdir -p /data/db && chmod +x /etc/init.d/mongodb && mkdir /var/lock/subsys/

# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added
RUN groupadd -r mongodb && useradd -r -g mongodb mongodb

ENV GPG_KEYS \
  DFFA3DCF326E302C4787673A01C4E7FAAAB2461C \
  42F3E95A2C4F08279C4960ADD68FA50FEA312927
RUN set -ex \
  && for key in $GPG_KEYS; do \
    apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"; \
  done

ENV MONGO_MAJOR 3.2
ENV MONGO_VERSION 3.2.6

RUN echo "deb http://repo.mongodb.org/apt/debian wheezy/mongodb-org/$MONGO_MAJOR main" > /etc/apt/sources.list.d/mongodb-org.list

RUN set -x \
  && apt-get update \
  && apt-get install -y \
    mongodb-org=$MONGO_VERSION \
    mongodb-org-server=$MONGO_VERSION \
    mongodb-org-shell=$MONGO_VERSION \
    mongodb-org-mongos=$MONGO_VERSION \
    mongodb-org-tools=$MONGO_VERSION \
  && rm -rf /var/lib/apt/lists/* \
  && rm -rf /var/lib/mongodb \ 
  && mv /etc/mongod.conf /etc/mongod.conf.orig

RUN mkdir -p /data/db /data/configdb \
  && chown -R mongodb:mongodb /data/db /data/configdb

#---------------------------
# Kafka and Zookeeper

ENV DEBIAN_FRONTEND noninteractive
ENV SCALA_VERSION 2.11
ENV KAFKA_VERSION 0.10.0.0
#ENV KAFKA_VERSION 0.10.1.0-SNAPSHOT
ENV KAFKA_HOME /opt/kafka_"$SCALA_VERSION"-"$KAFKA_VERSION"
#COPY bin/kafka_"$SCALA_VERSION"-"$KAFKA_VERSION".tgz /tmp/
ADD bin/kafka.conf bin/zookeeper.conf /etc/supervisor/conf.d/

# grab gosu for easy step-down from root
ENV GOSU_VERSION 1.7
RUN set -x \
  && wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)" \
  && wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc" \
  && export GNUPGHOME="$(mktemp -d)" \
  && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \
  && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \
  && rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc \
  && chmod +x /usr/local/bin/gosu \
  && gosu nobody true 

#---------------------------
# Redis

ENV REDIS_VERSION 3.0.7
ENV REDIS_DOWNLOAD_URL http://download.redis.io/releases/redis-3.0.7.tar.gz
ENV REDIS_DOWNLOAD_SHA1 e56b4b7e033ae8dbf311f9191cf6fdf3ae974d1c

# for redis-sentinel see: http://redis.io/topics/sentinel
RUN set -x \
  && gem install fakes3 \
  && mkdir /tmp/nginx \
  && chmod a+wrx /tmp/nginx \
  && chmod a+wr /var/www/html/harness.json \
  && sed 's/root .*\;/root \/var\/www\/html\;/' -i /etc/nginx/sites-available/default \
  && wget -O redis.tar.gz "$REDIS_DOWNLOAD_URL" \
  && echo "$REDIS_DOWNLOAD_SHA1 *redis.tar.gz" | sha1sum -c - \
  && mkdir -p /usr/src/redis \
  && tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1 \
  && rm redis.tar.gz \
  && make -C /usr/src/redis 32bit \
  && make -C /usr/src/redis install \
  && rm -r /usr/src/redis \
  && wget -q http://apache.mirrors.spacedump.net/kafka/"$KAFKA_VERSION"/kafka_"$SCALA_VERSION"-"$KAFKA_VERSION".tgz -O /tmp/kafka_"$SCALA_VERSION"-"$KAFKA_VERSION".tgz \
  && tar xfz /tmp/kafka_"$SCALA_VERSION"-"$KAFKA_VERSION".tgz -C /opt \
  && echo "auto.create.topics.enable=true" >> /opt/kafka_"$SCALA_VERSION"-"$KAFKA_VERSION"/config/server.properties \
  && rm /tmp/kafka_"$SCALA_VERSION"-"$KAFKA_VERSION".tgz

#RUN mkdir /data && chown redis:redis /data
RUN chown redis:redis /data
VOLUME /data
WORKDIR /data

ENTRYPOINT ["start"]

# Expose ports.
# - nginx
EXPOSE 80
# - redis
EXPOSE 6379
# - kafka (2181 is zookeeper, 9092 is kafka)
EXPOSE 2181 9092
# - fakeS3
EXPOSE 10001
# - MongoDB
EXPOSE 27017
EXPOSE 28018

# WWW DocRoot
# /usr/share/nginx/www
