#!/bin/bash

chmod a+rx /var/run/docker.sock

HTTP_PORT="`extPort.sh 80`"
REDIS_PORT="`extPort.sh 6379`"
KAFKA_PORT="`extPort.sh 9092`"
ZOO_PORT="`extPort.sh 2181`"
S3_PORT="`extPort.sh 10001`"
POSTGRES_PORT="`extPort.sh 5432`"
EVENTSTORE_TCP_PORT="`extPort.sh 1113`"
EVENTSTORE_HTTP_PORT="`extPort.sh 2113`"
export ADVERTISED_PORT=$KAFKA_PORT
export ADVERTISED_HOST=$HOST_IP

# try setting listeners to $HOST_IP:$KAFKA_PORT too if this doesn't work
sed 's/\#advertised.listeners=PLAINTEXT:\/\/your.host.name:9092/'"advertised.listeners=PLAINTEXT:\/\/$HOST_IP:$KAFKA_PORT"'/g' -i /opt/kafka_2.11-0.10.2.1/config/server.properties

sed 's/HOSTIP/'"$HOST_IP"'/g' -i /var/www/html/harness.json
sed 's/HTTP_PORT/'"$HTTP_PORT"'/g' -i /var/www/html/harness.json
sed 's/REDIS_PORT/'"$REDIS_PORT"'/g' -i /var/www/html/harness.json
sed 's/KAFKA_PORT/'"$KAFKA_PORT"'/g' -i /var/www/html/harness.json
sed 's/ZOO_PORT/'"$ZOO_PORT"'/g' -i /var/www/html/harness.json
sed 's/S3_PORT/'"$S3_PORT"'/g' -i /var/www/html/harness.json
sed 's/POSTGRES_PORT/'"$POSTGRES_PORT"'/g' -i /var/www/html/harness.json
sed 's/EVENTSTORE_TCP/'"$EVENTSTORE_TCP"'/g' -i /var/www/html/harness.json
sed 's/EVENTSTORE_HTTP/'"$EVENTSTORE_HTTP"'/g' -i /var/www/html/harness.json

service nginx start
service mongodb start

# If user has mounted (vid Docker's -v argument) a directory /import then we'll 
# slurp data from that directory into MongoDB using the file names as collection names.
if [ -d "/extra/mongo" ]; then
	for dbdir in $(ls -d /extra/mongo/*); do
		db=$(basename $dbdir)
		for f in $(ls $dbdir/*.js); do
			filename=$(basename $f)
			coll=${filename%.*}
			mongoimport --db $db --collection $coll --file $f
		done
	done
fi

# If /extra is mounted then look for app.config file and glom its contents
# into the 'applications' section of harness.json
if [ -e "/extra/config/app.config" ]; then
	appconfig=`cat /extra/config/app.config`
	jq ".applications |= .+ [ $appconfig ]" /var/www/html/harness.json > /tmp/nginx/harness.json
	cp /tmp/nginx/harness.json /var/www/html/harness.json
	chmod a+wr /tmp/nginx/harness.json
fi

if [ -d "/extra/http" ]; then
	cp /extra/http/* /var/www/html/
fi

# fakes3 S3 simulator
fakes3 -r ~/fakes3_root -p 10001 &

# DynamoDB
/usr/bin/java -Djava.library.path=. -jar DynamoDBLocal.jar -dbPath /var/dynamodb_local -port 8000 &

# Postgres
/usr/bin/start-postgres.sh postgres &

# EventStore
exec eventstored &

# status checker
check.sh &

set -e

# allow the container to be started with `--user`
if [ "$1" = 'redis-server' -a "$(id -u)" = '0' ]; then
	chown -R redis .
	exec gosu redis "$0" "$@"
fi

supervisord -n &

#exec "$@"
exec "redis-server"
